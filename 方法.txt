//字符串转base64
function stringToBase64(str) {
  return btoa(unescape(encodeURIComponent(str)));
}

// 获取base64
    getBase64(file) {
	return new Promise((resolve, reject) => {
		const reader = new FileReader()
		let fileResult = ''
		reader.readAsDataURL(file)
		// 开始转
		reader.onload = () => {
			fileResult = reader.result;
          			console.log('开始上传');
		}
		// 转 失败
		reader.onerror = error => {
			reject(error);
		 	console.log('失败啦');
		}
		// 转 结束
		reader.onloadend = () => {
			resolve(fileResult);
          			console.log('结束啦');
		}
	})
},

/**       
 * 对Date的扩展，将 Date 转化为指定格式的String       
 * 月(M)、日(d)、12小时(h)、24小时(H)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符       
 * 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)       
 * eg:       
 * "yyyy-MM-dd hh:mm:ss.S" ==> 2006-07-02 08:09:04.423    
 * "yyyy-M-d h:m:s.S" ==> 2006-7-2 8:9:4.18       
 */
export function format(date, fmt) {
	var o = {
		"M+": date.getMonth() + 1, //月份
		"d+": date.getDate(), //日
		"h+": date.getHours(), //小时
		"m+": date.getMinutes(), //分
		"s+": date.getSeconds(), //秒
		"q+": Math.floor((date.getMonth() + 3) / 3), //季度
		"S": date.getMilliseconds() //毫秒
	};
	if (/(y+)/.test(fmt))
		fmt = fmt.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length));
	for (var k in o)
		if (new RegExp("(" + k + ")").test(fmt))
			fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k])
				.length)));
	return fmt;
}



/**
 * 计算两个日期相差天数
 * return day
 */
export function differ(date1, date2) {
	var time1 = date1.getTime();
	var time2 = date2.getTime();
	//除不尽时,向下取整
	var differ = Math.floor((time1 - time2) / (1000 * 3600 * 24));

	return differ;
}
/**
 * 日期追加天数
 * @param {Object} num 天数
 */
export function addDays(date, num) {
	date.setDate(date.getDate() + num);
	return date;
}
/**
 * 日期追加小时
 * @param {Object} num 天数
 */
export function addTimes(date, num) {
	date.setHours(date.getTime() + num);
	return date;
}
